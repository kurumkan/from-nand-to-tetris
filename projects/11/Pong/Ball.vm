function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 10
push argument 3
push constant 6
sub
pop this 11
push argument 4
pop this 12
push argument 5
push constant 6
sub
pop this 13
push constant 0
pop this 14
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
not
if-goto ELSE_BEGIN1
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto IF_END0
label ELSE_BEGIN1
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label IF_END0
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
not
if-goto ELSE_BEGIN3
push this 4
push this 5
add
pop this 4
goto IF_END2
label ELSE_BEGIN3
push this 4
push this 6
add
pop this 4
push this 9
not
if-goto ELSE_BEGIN5
push this 7
not
if-goto ELSE_BEGIN7
push this 0
push constant 4
add
pop this 0
goto IF_END6
label ELSE_BEGIN7
push this 1
push constant 4
add
pop this 1
label IF_END6
goto IF_END4
label ELSE_BEGIN5
push this 7
not
if-goto ELSE_BEGIN9
push this 0
push constant 4
sub
pop this 0
goto IF_END8
label ELSE_BEGIN9
push this 1
push constant 4
sub
pop this 1
label IF_END8
label IF_END4
label IF_END2
push this 8
not
if-goto ELSE_BEGIN11
push this 7
not
if-goto ELSE_BEGIN13
push this 1
push constant 4
add
pop this 1
goto IF_END12
label ELSE_BEGIN13
push this 0
push constant 4
add
pop this 0
label IF_END12
goto IF_END10
label ELSE_BEGIN11
push this 7
not
if-goto ELSE_BEGIN15
push this 1
push constant 4
sub
pop this 1
goto IF_END14
label ELSE_BEGIN15
push this 0
push constant 4
sub
pop this 0
label IF_END14
label IF_END10
push this 0
push this 10
gt
not
not
if-goto ELSE_BEGIN17
push constant 1
pop this 14
push this 10
pop this 0
goto IF_END16
label ELSE_BEGIN17
goto IF_END16
label IF_END16
push this 0
push this 11
lt
not
not
if-goto ELSE_BEGIN19
push constant 2
pop this 14
push this 11
pop this 0
goto IF_END18
label ELSE_BEGIN19
goto IF_END18
label IF_END18
push this 1
push this 12
gt
not
not
if-goto ELSE_BEGIN21
push constant 3
pop this 14
push this 12
pop this 1
goto IF_END20
label ELSE_BEGIN21
goto IF_END20
label IF_END20
push this 1
push this 13
lt
not
not
if-goto ELSE_BEGIN23
push constant 4
pop this 14
push this 13
pop this 1
goto IF_END22
label ELSE_BEGIN23
goto IF_END22
label IF_END22
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
not
if-goto ELSE_BEGIN25
push constant 10
pop local 4
goto IF_END24
label ELSE_BEGIN25
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
not
if-goto ELSE_BEGIN27
push constant 20
pop local 4
goto IF_END26
label ELSE_BEGIN27
push constant 5
pop local 4
label IF_END26
label IF_END24
push this 14
push constant 1
eq
not
if-goto ELSE_BEGIN29
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END28
label ELSE_BEGIN29
push this 14
push constant 2
eq
not
if-goto ELSE_BEGIN31
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_END30
label ELSE_BEGIN31
push this 14
push constant 3
eq
not
if-goto ELSE_BEGIN33
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto IF_END32
label ELSE_BEGIN33
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label IF_END32
label IF_END30
label IF_END28
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
