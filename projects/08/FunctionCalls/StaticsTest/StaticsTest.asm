// bootstrap
   @256
	D=A
	@SP
	M=D
	@RETURN_ADDRESS_BOOTSTRAP
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@5
	D=A
	@n
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Sys.init
	0;JMP
(RETURN_ADDRESS_BOOTSTRAP)
// function Class1.set 0
(Class1.set)
// push argument 0
	@0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// pop static 0
   @SP
   D=M-1
   @SP
   M=D
   @SP
   A=M
   D=M
   @Class1.vm.0
   M=D
// push argument 1
	@1
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// pop static 1
   @SP
   D=M-1
   @SP
   M=D
   @SP
   A=M
   D=M
   @Class1.vm.1
   M=D
// push constant 0
	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// return
	@LCL
	D=M
	@R14
	M=D
	@R14
	D=M
	@5
	A=D-A
	D=M
	@R15
	M=D
	@SP
	D=M-1
	@SP
	M=D
	@SP
	A=M
	D=M
	@ARG
	A=M
	M=D
	@ARG
	D=M+1
	@SP
	M=D
	@R14
	D=M
	@1
	A=D-A
	D=M
	@THAT
	M=D
	@R14
	D=M
	@2
	A=D-A
	D=M
	@THIS
	M=D
	@R14
	D=M
	@3
	A=D-A
	D=M
	@ARG
	M=D
	@R14
	D=M
	@4
	A=D-A
	D=M
	@LCL
	M=D
	@R15
	A=M
	0;JMP
// function Class1.get 0
(Class1.get)
// push static 0
   @Class1.vm.0
   D=M
   @SP
   A=M
   M=D
   @SP
   D=M+1
   @SP
   M=D
// push static 1
   @Class1.vm.1
   D=M
   @SP
   A=M
   M=D
   @SP
   D=M+1
   @SP
   M=D
// sub
	@SP
	D=M-1
	@SP
	M=D
	@SP
	A=M
	D=M
	@SP
	A=M-1
	M=M-D
// return
	@LCL
	D=M
	@R14
	M=D
	@R14
	D=M
	@5
	A=D-A
	D=M
	@R15
	M=D
	@SP
	D=M-1
	@SP
	M=D
	@SP
	A=M
	D=M
	@ARG
	A=M
	M=D
	@ARG
	D=M+1
	@SP
	M=D
	@R14
	D=M
	@1
	A=D-A
	D=M
	@THAT
	M=D
	@R14
	D=M
	@2
	A=D-A
	D=M
	@THIS
	M=D
	@R14
	D=M
	@3
	A=D-A
	D=M
	@ARG
	M=D
	@R14
	D=M
	@4
	A=D-A
	D=M
	@LCL
	M=D
	@R15
	A=M
	0;JMP
// function Class2.set 0
(Class2.set)
// push argument 0
	@0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// pop static 0
   @SP
   D=M-1
   @SP
   M=D
   @SP
   A=M
   D=M
   @Class2.vm.0
   M=D
// push argument 1
	@1
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// pop static 1
   @SP
   D=M-1
   @SP
   M=D
   @SP
   A=M
   D=M
   @Class2.vm.1
   M=D
// push constant 0
	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// return
	@LCL
	D=M
	@R14
	M=D
	@R14
	D=M
	@5
	A=D-A
	D=M
	@R15
	M=D
	@SP
	D=M-1
	@SP
	M=D
	@SP
	A=M
	D=M
	@ARG
	A=M
	M=D
	@ARG
	D=M+1
	@SP
	M=D
	@R14
	D=M
	@1
	A=D-A
	D=M
	@THAT
	M=D
	@R14
	D=M
	@2
	A=D-A
	D=M
	@THIS
	M=D
	@R14
	D=M
	@3
	A=D-A
	D=M
	@ARG
	M=D
	@R14
	D=M
	@4
	A=D-A
	D=M
	@LCL
	M=D
	@R15
	A=M
	0;JMP
// function Class2.get 0
(Class2.get)
// push static 0
   @Class2.vm.0
   D=M
   @SP
   A=M
   M=D
   @SP
   D=M+1
   @SP
   M=D
// push static 1
   @Class2.vm.1
   D=M
   @SP
   A=M
   M=D
   @SP
   D=M+1
   @SP
   M=D
// sub
	@SP
	D=M-1
	@SP
	M=D
	@SP
	A=M
	D=M
	@SP
	A=M-1
	M=M-D
// return
	@LCL
	D=M
	@R14
	M=D
	@R14
	D=M
	@5
	A=D-A
	D=M
	@R15
	M=D
	@SP
	D=M-1
	@SP
	M=D
	@SP
	A=M
	D=M
	@ARG
	A=M
	M=D
	@ARG
	D=M+1
	@SP
	M=D
	@R14
	D=M
	@1
	A=D-A
	D=M
	@THAT
	M=D
	@R14
	D=M
	@2
	A=D-A
	D=M
	@THIS
	M=D
	@R14
	D=M
	@3
	A=D-A
	D=M
	@ARG
	M=D
	@R14
	D=M
	@4
	A=D-A
	D=M
	@LCL
	M=D
	@R15
	A=M
	0;JMP
// function Sys.init 0
(Sys.init)
// push constant 6
	@6
	D=A
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// push constant 8
	@8
	D=A
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// call Class1.set 2
	@RETURN_ADDRESS_2
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@5
	D=A
	@2
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class1.set
	0;JMP
(RETURN_ADDRESS_2)
// pop temp 0
	@SP
	D=M-1
	@SP
	M=D
	@0
	D=A
	@R5
	D=A+D
	@R13
	M=D
	@SP
	A=M
	D=M
	@R13
	A=M
	M=D
// push constant 23
	@23
	D=A
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// push constant 15
	@15
	D=A
	@SP
	A=M
	M=D
	@SP
	D=M+1
	@SP
	M=D
// call Class2.set 2
	@RETURN_ADDRESS_3
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@5
	D=A
	@2
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class2.set
	0;JMP
(RETURN_ADDRESS_3)
// pop temp 0
	@SP
	D=M-1
	@SP
	M=D
	@0
	D=A
	@R5
	D=A+D
	@R13
	M=D
	@SP
	A=M
	D=M
	@R13
	A=M
	M=D
// call Class1.get 0
	@RETURN_ADDRESS_4
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@5
	D=A
	@0
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class1.get
	0;JMP
(RETURN_ADDRESS_4)
// call Class2.get 0
	@RETURN_ADDRESS_5
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@LCL
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@ARG
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THIS
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@THAT
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@5
	D=A
	@0
	D=D+A
	@SP
	D=M-D
	@ARG
	M=D
	@SP
	D=M
	@LCL
	M=D
	@Class2.get
	0;JMP
(RETURN_ADDRESS_5)
// label WHILE
(WHILE)
// goto WHILE
	@WHILE
	0;JMP
